{"version":3,"sources":["App.js","reportWebVitals.js","index.js","counterReducer.js"],"names":["App","dispatch","useDispatch","state","useSelector","className","onClick","type","payload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"2NA4BeA,MAxBf,WAEC,IAAMC,EAAWC,cAOVC,EAAQC,aAAY,SAACD,GAAD,OAASA,KACnC,OACE,qBAAKE,UAAU,MAAf,SAEE,sBAAKA,UAAU,2BAAf,UACE,6BAAKF,IACL,sBAAKE,UAAU,gCAAf,UACE,wBAAQC,QAbQ,WACtBL,EAAS,CAACM,KAAK,MAAMC,QAAQ,KAYaH,UAAU,uBAA9C,uBACA,wBAAQC,QAXQ,WACtBL,EAAS,CAACM,KAAK,MAAMC,QAAQ,KAUaH,UAAU,iBAA9C,gCCTKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCERQ,EAAQC,aCNgB,WAAmC,IAAlChB,EAAiC,uDAF3C,EAEgCiB,EAAW,uCAE5D,OAAOA,EAAOb,MACV,IAAK,MACD,OAAOJ,EAAQiB,EAAOZ,QAC1B,IAAK,MACD,OAAOL,EAAQiB,EAAOZ,QACtB,QACA,OAAOL,MDDnBkB,IAASC,OACP,cAAC,IAAD,CAAUJ,MAASA,EAAnB,SACF,cAAC,EAAD,MAEEK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.1d5a7f1b.chunk.js","sourcesContent":["\nimport './App.css';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\nfunction App() {\n\n const dispatch = useDispatch();\n  const handleIncrement = () => {\n    dispatch({type:\"INC\",payload:3});\n  }\n  const handleDecrement = () => {\n    dispatch({type:\"DEC\",payload:1});\n  }\n  const state = useSelector((state)=>state);\n  return (\n    <div className=\"App\">\n      \n      <div className=\"jumbotron container mt-5\">\n        <h1>{state}</h1>\n        <div className=\"d-flex justify-content-center\">\n          <button onClick = {handleIncrement} className=\"btn btn-success mr-2\">Increment</button>\n          <button onClick = {handleDecrement} className=\"btn btn-danger\">Decrement</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {counterReducer} from './counterReducer';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(counterReducer);\nReactDOM.render(\n  <Provider store = {store}>\n<App /> \n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nconst initialstate = 0;\r\n\r\nexport const counterReducer = (state = initialstate, action) => {\r\n\r\n    switch(action.type) {\r\n        case \"INC\":\r\n            return state + action.payload;\r\n        case \"DEC\" :\r\n            return state - action.payload;\r\n            default :\r\n            return state;    \r\n    }\r\n\r\n}"],"sourceRoot":""}